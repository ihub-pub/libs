/*
 * Copyright (c) 2022 Henry 李恒 (henry.box@outlook.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pub.ihub.process.boot;

import cn.hutool.core.io.file.FileReader;
import cn.hutool.core.io.file.FileWriter;
import lombok.SneakyThrows;
import pub.ihub.process.BaseJavapoetProcessor;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.stream.Collectors;

import static javax.tools.StandardLocation.SOURCE_OUTPUT;

/**
 * spring.factories基础注解处理器
 *
 * @author henry
 */
public abstract class BaseSpringFactoriesProcessor extends BaseJavapoetProcessor {

	@SneakyThrows
	protected void writeSpringFactoriesFile(String key, String... values) {
		String sourcePath = mFiler.getResource(SOURCE_OUTPUT, "", "META-INF/spring.factories").getName();
		Map<String, Set<String>> factories = new HashMap<>(1);

		// 解析spring.factories
		try {
			Properties properties = new Properties();
			properties.load(new FileReader(sourcePath).getInputStream());
			for (Map.Entry<Object, Object> entry : properties.entrySet()) {
				String value = (String) entry.getValue();
				factories.put(((String) entry.getKey()).trim(), Arrays.stream(value.split(","))
					.map(String::trim).collect(Collectors.toSet()));
			}
		} catch (Exception e) {
			note("%s resource file not found.", sourcePath);
		}

		// 追加新配置
		Set<String> defaultValues = factories.getOrDefault(key, new HashSet<>());
		defaultValues.addAll(List.of(values));
		factories.put(key, defaultValues);

		// 重新生成spring.factories
		List<String> lines = new ArrayList<>();
		lines.add("# Generated by ihub-process https://ihub.pub");
		factories.forEach((k, v) -> {
			lines.add(k + "=\\");
			lines.add(String.join("\n", v));
		});
		new FileWriter(sourcePath).writeLines(lines);
	}

}
